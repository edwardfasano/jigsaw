#!/usr/bin/env php
<?php

use Illuminate\Container\Container;
use Illuminate\Contracts\Events\Dispatcher;
use Illuminate\Filesystem\Filesystem;
use Illuminate\View\Compilers\BladeCompiler;
use Illuminate\View\Engines\CompilerEngine;
use Illuminate\View\Engines\EngineResolver;
use Illuminate\View\Factory;
use Illuminate\View\FileViewFinder;
use Jigsaw\Jigsaw\Console\BuildCommand;
use Jigsaw\Jigsaw\Console\InitCommand;
use Jigsaw\Jigsaw\Handlers\BladeHandler;
use Jigsaw\Jigsaw\Handlers\DefaultHandler;
use Jigsaw\Jigsaw\Jigsaw;
use Jigsaw\Jigsaw\NullDispatcher;

if (file_exists(__DIR__.'/vendor/autoload.php')) {
    require __DIR__.'/vendor/autoload.php';
} else {
    require __DIR__.'/../../autoload.php';
}

// Config
$cachePath = getcwd() . '/_tmp';
$buildPath = getcwd() . '/build';
$sourcePath = getcwd() . '/source';

$container = new Container;

$container->bind(BladeHandler::class, function ($c) use ($cachePath, $sourcePath) {
    $resolver = new EngineResolver;

    $resolver->register('blade', function () use ($cachePath) {
        $compiler = new BladeCompiler(new Filesystem, $cachePath);
        return new CompilerEngine($compiler, new Filesystem);
    });

    $finder = new FileViewFinder(new Filesystem, [$sourcePath]);
    $factory = new Factory($resolver, $finder, new NullDispatcher);

    return new BladeHandler($factory);
});


$jigsaw = new Jigsaw(new Filesystem, $cachePath);

$jigsaw->registerHandler($container[BladeHandler::class]);
$jigsaw->registerHandler($container[DefaultHandler::class]);

$buildCommand = new BuildCommand($jigsaw, $sourcePath, $buildPath);

$app = new Symfony\Component\Console\Application('Jigsaw', '0.0.1');
$app->add($buildCommand);
$app->add($container[InitCommand::class]);
$app->run();
